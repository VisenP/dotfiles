#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
alias y='yarn'
alias setclip="xclip -selection c"
alias getclip="xclip -selection c -o"

CODING_FOLDER="/home/visen/Documents/Code/"
CODING_EXCLUDE_DIRS=("! -path /*.git/*" "! -path /*node_modules/*" "! -path /*python2.7/*" "! -path /*python3.6/*" "! -path /*__pycache__/*")
function coding {
    DIRS=$(find $CODING_FOLDER -maxdepth 2 -type d ${CODING_EXCLUDE_DIRS[@]} | sed "s|$CODING_FOLDER||g")
    DIR=$(echo -e "--root-- $DIRS" | fzf --reverse)
    if [[ ${#DIR} -ne 0 ]]; then
    	if [[ "$DIR" == "--root-- " ]]; then
    	    DIR="."
    	fi
        cd "$CODING_FOLDER$DIR"
    	echo -e '\e[94m======================================\e[0m\n\n    Going to \e[36m'$DIR'\e[39m\n\n\e[94m======================================\e[0m'
    fi
}

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}


source /usr/share/fzf/key-bindings.bash
export PATH="$(yarn global bin):$PATH"

PS1='[\[$(tput setaf 3)\]\u\[$(tput sgr0)\]@\h] [\[$(tput setaf 6)\]\W\[$(tput sgr0)\]]\[$(tput setaf 5)\]$(parse_git_branch)\[$(tput sgr0)\]$ \[$(tput sgr0)\]'
neofetch


# pnpm
export PNPM_HOME="/home/visen/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end
